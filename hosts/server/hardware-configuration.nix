# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, host, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot = {
    initrd = {
      availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usbhid" "usb_storage" "sd_mod" ];
      kernelModules = [ ];
      #postDeviceCommands = lib.mkAfter ''
      #  zfs rollback -r rpool/local/root@blank
      #'';
    };
    kernelModules = [ "kvm-amd" ];
    extraModulePackages = [ ];
    supportedFilesystems = [ "zfs" ];
    zfs = {
      forceImportRoot = false;
      #extraPools = [ "nextcloud" "NAS_data" "Backup_data"];
    };
  };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/DB20-85CF";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022"];
    };

  fileSystems."/" =
    { device = "rpool/local/root";
      fsType = "zfs";
    };

  fileSystems."/nix" =
    { device = "rpool/local/nix";
      fsType = "zfs";
    };

  fileSystems."/home" =
    { device = "rpool/safe/home";
      fsType = "zfs";
    };

  fileSystems."/persist" =
    { device = "rpool/safe/persist";
      fsType = "zfs";
      neededForBoot = true;
    };

  fileSystems."/nextcloud" =
    { device = "nextpool/data";
      fsType = "zfs";
    };

  fileSystems."/backup" =
    { device = "backpool/data";
      fsType = "zfs";
    };

  fileSystems."/nasdata" =
    { device = "naspool/data";
      fsType = "zfs";
      options = [ "bind" ];
    };
  swapDevices =
    [ { device = "/dev/disk/by-uuid/35d37062-0e00-41e6-ad7f-642bbfe21794"; }
    ];
  #  fileSystems."/mnt/nextcloud" = {
  #  device = "nextcloud";
  #  fsType = "zfs";
  #};
  #fileSystems."/mnt/backup" = {
  #  device = "Backup_data";
  #  fsType = "zfs";
  #};
  #
  #fileSystems."/mnt/NAS" = {
  #  device = "NAS_data";
  #  fsType = "zfs";
  #};

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networkings
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  networking = with host; {
    hostName = hostName;
    hostId = "3da9ba0f";
    networkmanager.enable = true;
    interfaces.enp2s0.ipv4 = {
      addresses = [
        {
          address = "192.168.234.8";
          prefixLength = 24;
        }
        {
          address = "192.168.234.10";
          prefixLength = 24;
        }
      ];
    };
    defaultGateway = {
      address = "192.168.234.1";
      interface = "enp2s0";
    };
    firewall = {
      enable = true;
      allowPing = true;
      allowedTCPPorts = [ 53 80 443 2049 4000 4001 4002 ];
      allowedUDPPorts = [ 53 51820];
    };
    nameservers = [
      "1.1.1.1"
    ];
  };
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
